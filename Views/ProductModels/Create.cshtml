@model NET_Advanced.Models.ProductModel
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<NET_Advanced.Resources.Resource> Localizer;

<h1>@Localizer["Create"]</h1>

<h4>@Localizer["NewProduct"]</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="productCreateForm">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Naam" class="control-label">@Localizer["Name"]</label>
                <input asp-for="Naam" class="form-control" id="productNaam"/>
                <span asp-validation-for="Naam" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Prijs" class="control-label">@Localizer["Price"]</label>
                <input asp-for="Prijs" class="form-control" id="productPrijs"/>
                <span asp-validation-for="Prijs" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@Localizer["Create"]" class="btn btn-primary" id="createProductBtn"/>
            </div>
        </form>
        <div id="ajaxMessage" class="mt-3"></div>
    </div>
</div>

<div>
    <a asp-action="Index">@Localizer["BackToList"]</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.getElementById("createProductBtn").addEventListener("click", function (event) {
            event.preventDefault();
            const naam = document.getElementById("productNaam").value;
            const prijs = document.getElementById("productPrijs").value;
            console.log("Verzonden data:", { Naam: naam, Prijs: prijs });

            fetch('/ProductModels/CreateAjax', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ Naam: naam, Prijs: prijs })
            })
            .then(response => {
                console.log("Response status:", response.status);

                if (!response.ok) {
                    throw new Error(`Server error: ${response.status}`);
                }

                return response.text();
            })
            .then(responseText => {
                console.log("Response text:", responseText);

                try {
                    const data = JSON.parse(responseText);
                    console.log("Response JSON data:", data);

                    const messageDiv = document.getElementById("ajaxMessage");
                    if (data.success) {
                        messageDiv.innerHTML = `<p class="text-success">${data.message}</p>`;
                        document.getElementById("productCreateForm").reset();
                    } else {
                        const errors = data.errors ? data.errors.join('<br>') : data.message;
                        messageDiv.innerHTML = `<p class="text-danger">${errors}</p>`;
                    }
                } catch (e) {
                    console.error("JSON parse error:", e);
                    document.getElementById("ajaxMessage").innerHTML = `<p class="text-danger">Ongeldige serverresponse ontvangen.</p>`;
                }
            })
            .catch(error => {
                console.error("Fetch fout:", error);
                document.getElementById("ajaxMessage").innerHTML = `<p class="text-danger">Er is iets misgegaan met het formulier. Probeer het opnieuw.</p>`;
            });
        });
    </script>
}